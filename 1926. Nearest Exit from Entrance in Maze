class Solution:
    def nearestExit(self, maze: List[List[str]], entrance: List[int]) -> int:

        n , m = len(maze) , len(maze[0])
        
        q = deque([(entrance[0],entrance[1],0)])

        directions = [(-1,0),(1,0),(0,1),(0,-1)]

        maze[entrance[0]][entrance[1]] = '+'

        while q :

            r,c,cnt = q.popleft()
           
            for dr,dc in directions:
                nr,nc = r+dr,c+dc

                if 0<=nr<n and 0<=nc<m and maze[nr][nc] == '.':
                    if nr == 0 or nr == n-1 or nc == 0 or nc == m-1 :
                        return cnt+1
                    maze[nr][nc] = '+'
                    q.append((nr,nc,cnt+1))
        return -1


        
