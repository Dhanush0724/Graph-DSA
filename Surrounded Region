class Solution:
    def solve(self, board: List[List[str]]) -> None:
        """
        Do not return anything, modify board in-place instead.
        """
        def dfs(i,j) :
            if i<0 or j<0 or i>=n or j>=m or board[i][j] != 'O':
                return
            
            board[i][j] = '#'
            for dr ,dc in [(0,1),(0,-1),(1,0),(-1,0)]:
                dfs(i+dr,j+dc)
        
        n = len(board)
        m = len(board[0])
        for i in range(n):
            if board[i][0] == 'O':
                dfs(i,0)
            if board[i][m-1] == 'O':
                dfs(i,m-1)
        for j in range(m):
            if board[0][j] == 'O':
                dfs(0,j)
            if board[n-1][j] == 'O':
                dfs(n-1,j)
        for i in range(n):
            for j in range(m):
                if board[i][j] == 'O':
                    board[i][j] = 'X'
                elif board[i][j] == '#':
                    board[i][j] = 'O'
        
        
