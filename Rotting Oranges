class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:

        n  = len(grid)
        m = len(grid[0])
        q = deque()
        fresh_oranges = 0
        for i in range(n):
            for j in range(m):
                if grid[i][j] == 2:
                    q.append((i,j,0))
                elif grid[i][j] == 1:
                    fresh_oranges+=1
        if fresh_oranges == 0:
            return 0

        minutes = 0

        while q :

            r,c,minutes = q.popleft()
            for dr,dc in [(-1,0),(1,0),(0,-1),(0,1)]:
                nr,nc = r+dr,c+dc
                if 0<=nr<n and 0<=nc<m and grid[nr][nc] == 1 :
                    fresh_oranges-=1
                    grid[nr][nc] = 2
                    q.append((nr,nc,minutes+1))
        return minutes if fresh_oranges == 0 else -1

